package org.ual.hmis.equipo16;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class ListadoCorrectoTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() {
	    System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe"); 
	    System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe"); 
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void listadoCorrecto() {
		// Test name: listadoCorrecto
		// Step # | name | target | value
		// 1 | open | / |
		driver.get("https://ecovivarenas.es/");
		// 2 | setWindowSize | 1552x840 |
		driver.manage().window().setSize(new Dimension(1552, 840));
		if (!driver.findElements(By.id("btn-aceptar-cookies")).isEmpty()) {
			driver.findElement(By.id("btn-aceptar-cookies")).click();
		}
		// 3 | click | linkText=Verduras |
		driver.findElement(By.linkText("Verduras")).click();
		// 4 | mouseDownAt | css=.producto:nth-child(1) > .datosProducto > form |
		// 107.7750015258789,14.024993896484375
		{
			WebElement element = driver.findElement(By.cssSelector(".producto:nth-child(1) > .datosProducto > form"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).clickAndHold().perform();
		}
		// 5 | mouseMoveAt | css=.producto:nth-child(1) > .datosProducto > form |
		// 107.7750015258789,14.024993896484375
		{
			WebElement element = driver.findElement(By.cssSelector(".producto:nth-child(1) > .datosProducto > form"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).perform();
		}
		// 6 | mouseUpAt | css=.producto:nth-child(1) > .datosProducto > form |
		// 107.7750015258789,14.024993896484375
		{
			WebElement element = driver.findElement(By.cssSelector(".producto:nth-child(1) > .datosProducto > form"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).release().perform();
		}
		// 7 | click | css=.producto:nth-child(1) > .datosProducto |
		driver.findElement(By.cssSelector(".producto:nth-child(1) > .datosProducto")).click();
		// 8 | assertElementPresent | css=.producto:nth-child(1) > .datosProducto
		// input:nth-child(1) |
		{
			List<WebElement> elements = driver
					.findElements(By.cssSelector(".producto:nth-child(1) > .datosProducto input:nth-child(1)"));
			assert (elements.size() > 0);
		}
		// 9 | assertElementPresent | css=.producto:nth-child(2) > .datosProducto
		// input:nth-child(1) |
		{
			List<WebElement> elements = driver
					.findElements(By.cssSelector(".producto:nth-child(2) > .datosProducto input:nth-child(1)"));
			assert (elements.size() > 0);
		}
	}
}
